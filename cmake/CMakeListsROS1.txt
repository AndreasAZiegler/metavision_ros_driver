#
# Copyright 2021 Bernd Pfrommer <bernd.pfrommer@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#add_compile_options(-Wall -Wextra -pedantic -Werror)
add_compile_options(-Wall -Wextra -pedantic)
add_compile_definitions(USING_ROS_1)

find_package(catkin REQUIRED COMPONENTS
  dvs_msgs
  prophesee_event_msgs
  event_array_msgs
  roscpp
  nodelet
  dynamic_reconfigure
  std_srvs
  camera_info_manager
  )

find_package(MetavisionSDK COMPONENTS driver REQUIRED)

generate_dynamic_reconfigure_options(
  cfg/MetaVisionDyn.cfg
  )

include_directories(
  include
  ${catkin_INCLUDE_DIRS}
  )

catkin_package(CATKIN_DEPENDS dynamic_reconfigure)

#
# --------- driver -------------

# nodelet
add_library(driver_nodelet src/metavision_wrapper.cpp src/driver_nodelet_ros1.cpp)
target_link_libraries(driver_nodelet MetavisionSDK::driver ${catkin_LIBRARIES})
# to ensure messages get built before executable
add_dependencies(driver_nodelet ${metavision_ros_driver_EXPORTED_TARGETS})

# node
add_executable(driver_node src/metavision_wrapper.cpp src/driver_node_ros1.cpp)
target_link_libraries(driver_node MetavisionSDK::driver ${catkin_LIBRARIES})
# to ensure messages get built before executable
add_dependencies(driver_node ${metavision_ros_driver_EXPORTED_TARGETS})


#############
## Install ##
#############

install(TARGETS driver_node
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})

install(TARGETS driver_nodelet
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}
  )
 
install(FILES nodelet_plugins.xml
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)

install(DIRECTORY launch
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
  FILES_MATCHING PATTERN "*.launch"
  )


#############
## Testing ##
#############

# To be done...
